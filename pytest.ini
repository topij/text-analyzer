; # pytest.ini

[pytest]
minversion = 6.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v -ra --strict-markers
markers =
    asyncio: mark test as async
asyncio_mode = auto
filterwarnings =
    ignore::DeprecationWarning
    ignore::pytest.PytestDeprecationWarning
log_cli = true
log_cli_level = DEBUG

; [pytest]
; minversion = 6.0
; testpaths = tests
; python_files = test_*.py
; python_classes = Test*
; python_functions = test_*
; addopts = -v -ra --strict-markers
; markers =
;     asyncio: mark test as async
; asyncio_mode = auto
; filterwarnings =
;     ignore::DeprecationWarning
;     ignore::pytest.PytestDeprecationWarning
; log_cli = true
; log_cli_level = INFO


; ; [pytest]
; ; # General test configuration
; ; asyncio_mode = auto
; ; testpaths = tests
; ; python_files = test_*.py

; ; # Set default fixture loop scope to function
; ; asyncio_default_fixture_loop_scope = function

; ; # Mark definitions
; ; markers = 
; ;     asyncio: mark test as async

; ; # Filter warnings
; ; filterwarnings =
; ;     ignore::DeprecationWarning
; ;     ignore::RuntimeWarning:asyncio.*
; ;     ignore:.*Event loop is closed.*:RuntimeWarning
; ;     ignore::UserWarning:asyncio.*

; ; # Log format
; ; log_cli = true
; ; log_cli_level = INFO
; ; log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
; ; log_cli_date_format = %Y-%m-%d %H:%M:%S



